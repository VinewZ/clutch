// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: rpc.proto

package rpcproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ToggleWindowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToggleWindowRequest) Reset() {
	*x = ToggleWindowRequest{}
	mi := &file_rpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToggleWindowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleWindowRequest) ProtoMessage() {}

func (x *ToggleWindowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleWindowRequest.ProtoReflect.Descriptor instead.
func (*ToggleWindowRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{0}
}

type ToggleWindowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToggleWindowResponse) Reset() {
	*x = ToggleWindowResponse{}
	mi := &file_rpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToggleWindowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleWindowResponse) ProtoMessage() {}

func (x *ToggleWindowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleWindowResponse.ProtoReflect.Descriptor instead.
func (*ToggleWindowResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{1}
}

type UseShellRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppName       string                 `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Command       string                 `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UseShellRequest) Reset() {
	*x = UseShellRequest{}
	mi := &file_rpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UseShellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseShellRequest) ProtoMessage() {}

func (x *UseShellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseShellRequest.ProtoReflect.Descriptor instead.
func (*UseShellRequest) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *UseShellRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *UseShellRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type UseShellResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Output        string                 `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UseShellResponse) Reset() {
	*x = UseShellResponse{}
	mi := &file_rpc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UseShellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseShellResponse) ProtoMessage() {}

func (x *UseShellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseShellResponse.ProtoReflect.Descriptor instead.
func (*UseShellResponse) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *UseShellResponse) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *UseShellResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_rpc_proto protoreflect.FileDescriptor

const file_rpc_proto_rawDesc = "" +
	"\n" +
	"\trpc.proto\x12\frpc.proto.v1\"\x15\n" +
	"\x13ToggleWindowRequest\"\x16\n" +
	"\x14ToggleWindowResponse\"F\n" +
	"\x0fUseShellRequest\x12\x19\n" +
	"\bapp_name\x18\x01 \x01(\tR\aappName\x12\x18\n" +
	"\acommand\x18\x02 \x01(\tR\acommand\"@\n" +
	"\x10UseShellResponse\x12\x16\n" +
	"\x06output\x18\x01 \x01(\tR\x06output\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error2n\n" +
	"\x13ToggleWindowService\x12W\n" +
	"\fToggleWindow\x12!.rpc.proto.v1.ToggleWindowRequest\x1a\".rpc.proto.v1.ToggleWindowResponse\"\x002^\n" +
	"\x0fUseShellService\x12K\n" +
	"\bUseShell\x12\x1d.rpc.proto.v1.UseShellRequest\x1a\x1e.rpc.proto.v1.UseShellResponse\"\x00B3Z1github.com/vinewz/clutch/backend/rpc/gen;rpcprotob\x06proto3"

var (
	file_rpc_proto_rawDescOnce sync.Once
	file_rpc_proto_rawDescData []byte
)

func file_rpc_proto_rawDescGZIP() []byte {
	file_rpc_proto_rawDescOnce.Do(func() {
		file_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rpc_proto_rawDesc), len(file_rpc_proto_rawDesc)))
	})
	return file_rpc_proto_rawDescData
}

var file_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_rpc_proto_goTypes = []any{
	(*ToggleWindowRequest)(nil),  // 0: rpc.proto.v1.ToggleWindowRequest
	(*ToggleWindowResponse)(nil), // 1: rpc.proto.v1.ToggleWindowResponse
	(*UseShellRequest)(nil),      // 2: rpc.proto.v1.UseShellRequest
	(*UseShellResponse)(nil),     // 3: rpc.proto.v1.UseShellResponse
}
var file_rpc_proto_depIdxs = []int32{
	0, // 0: rpc.proto.v1.ToggleWindowService.ToggleWindow:input_type -> rpc.proto.v1.ToggleWindowRequest
	2, // 1: rpc.proto.v1.UseShellService.UseShell:input_type -> rpc.proto.v1.UseShellRequest
	1, // 2: rpc.proto.v1.ToggleWindowService.ToggleWindow:output_type -> rpc.proto.v1.ToggleWindowResponse
	3, // 3: rpc.proto.v1.UseShellService.UseShell:output_type -> rpc.proto.v1.UseShellResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_rpc_proto_init() }
func file_rpc_proto_init() {
	if File_rpc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rpc_proto_rawDesc), len(file_rpc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_rpc_proto_goTypes,
		DependencyIndexes: file_rpc_proto_depIdxs,
		MessageInfos:      file_rpc_proto_msgTypes,
	}.Build()
	File_rpc_proto = out.File
	file_rpc_proto_goTypes = nil
	file_rpc_proto_depIdxs = nil
}
